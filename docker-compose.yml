services:
  elasticsearch:
    image: elasticsearch:8.11.3
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=true"
      - "xpack.security.http.ssl.enabled=false"  # Temporarily disable SSL until we set up proper certs
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elk
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      interval: 10s
      timeout: 5s
      retries: 10
  logstash:
    image: logstash:8.11.3
    container_name: logstash
    ports:
      - "5044:5044"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - ELASTIC_USER=${ELASTIC_USER}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk
  kibana:
    image: kibana:8.11.3
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      - KIBANA_USER=${KIBANA_USER}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - KIBANA_ENCRYPTED_SAVED_OBJECTS_KEY=${KIBANA_ENCRYPTED_SAVED_OBJECTS_KEY}
      - KIBANA_SECURITY_KEY=${KIBANA_SECURITY_KEY}
      - KIBANA_REPORTING_KEY=${KIBANA_REPORTING_KEY}
    networks:
      - elk
  ubuntu-logger:
    build: ./ubuntu-logger
    container_name: ubuntu-logger
    privileged: true
    environment:
      - FILEBEAT_NAME=ubuntu-logger
    depends_on:
      - logstash
    networks:
      - elk
    volumes:
      - /etc/hostname:/etc/hostname:ro
      - /etc/hosts:/etc/hosts:ro
      - /proc:/hostfs/proc:ro
  # almalinux-logger:
  #   build: ./almalinux-logger
  #   container_name: almalinux-logger
  #   environment:
  #     - FILEBEAT_NAME=almalinux-logger
  #   depends_on:
  #     - logstash
  #   networks:
  #     - elk
  # centos7-logger:
  #   #build: ./centos7-logger
  #   container_name: centos7-logger
  #   environment:
  #     - FILEBEAT_NAME=centos7-logger
  #   depends_on:
  #     - logstash
  #   networks:
  #     - elk
  # rocky8-logger:
  #   #build: ./rocky8-logger
  #   container_name: rocky8-logger
  #   environment:
  #     - FILEBEAT_NAME=rocky8-logger
  #   depends_on:
  #     - logstash
  #   networks:
  #     - elk
  # python-app:
  #   #build: ./python-app
  #   container_name: python-app
  #   environment:
  #     - FILEBEAT_NAME=python-app
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - ./python-app/uploads:/app/uploads
  #   networks:
  #     - elk
  # spring-backend:
  #   #build: ./spring-backend
  #   container_name: spring-backend
  #   environment:
  #     - FILEBEAT_NAME=spring-backend
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - logstash
  #   networks:
  #     - elk
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  # angular-frontend:
  #   #build: ./angular-frontend
  #   container_name: angular-frontend
  #   environment:
  #     - FILEBEAT_NAME=angular-frontend
  #   ports:
  #     - "4200:80"
  #   depends_on:
  #     - spring-backend
  #   networks:
  #     - elk
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
volumes:
  elasticsearch-data:
    driver: local
networks:
  elk:
    driver: bridge